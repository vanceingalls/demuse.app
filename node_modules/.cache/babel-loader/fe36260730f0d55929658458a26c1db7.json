{"ast":null,"code":"var _jsxFileName = \"/Users/vanceingalls/src/demuse.app/src/components/MetamaskButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { ethers } from 'ethers';\nimport { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MetamaskButton() {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    if (window.ethereum._state.accounts) {\n      setConnected(true);\n    }\n\n    console.log(`balance@${address}: ${provider.getBalance(address, \"latest\")}`);\n    console.log(`balance of signer: ${balance}`);\n  }, [address, balance]);\n  useEffect(() => {}, [address, balance]);\n\n  const accountChangedHandler = async newAccount => {\n    setAddress(await newAccount.getAddress());\n    setBalance(ethers.utils.formatEther(await newAccount.getBalance()));\n  };\n\n  const connect = useCallback(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    if (window.ethereum) {\n      provider.send(\"eth_requestAccounts\", []).then(async () => {\n        setConnected(true);\n        await accountChangedHandler(provider.getSigner());\n      });\n    } else {\n      alert(\"Please Install Metamask!!!\");\n    }\n  }, []);\n\n  if (connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connect,\n    children: \"Connect Metamask\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MetamaskButton, \"COEdv0pF0xXpa7bVH5SDmIPiTD4=\");\n\n_c = MetamaskButton;\nexport default MetamaskButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MetamaskButton\");","map":{"version":3,"names":["ethers","useCallback","useEffect","useState","MetamaskButton","address","setAddress","balance","setBalance","connected","setConnected","provider","providers","Web3Provider","window","ethereum","_state","accounts","console","log","getBalance","accountChangedHandler","newAccount","getAddress","utils","formatEther","connect","send","then","getSigner","alert"],"sources":["/Users/vanceingalls/src/demuse.app/src/components/MetamaskButton.tsx"],"sourcesContent":["import { ethers } from 'ethers';\nimport { useCallback, useEffect, useState } from 'react';\n\nfunction MetamaskButton() {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const [connected, setConnected] = useState(false);\n  \n\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    if (window.ethereum._state.accounts) {\n      setConnected(true);\n    }\n    console.log(`balance@${address}: ${provider.getBalance(address, \"latest\")}`);\n    console.log(`balance of signer: ${balance}`);\n  }, [address, balance]);\n\n  useEffect(() => {\n    \n  }, [address, balance]);\n\n  const accountChangedHandler = async (newAccount: ethers.providers.JsonRpcSigner) => {\n    setAddress(await newAccount.getAddress());\n    setBalance(ethers.utils.formatEther(await newAccount.getBalance()));\n  }\n\n  const connect = useCallback(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    if (window.ethereum) {\n      provider.send(\"eth_requestAccounts\", []).then(async () => {\n        setConnected(true);\n        await accountChangedHandler(provider.getSigner());\n      });\n    } else {\n      alert(\"Please Install Metamask!!!\");\n    }\n  }, []);\n\n  if (connected) {\n    return <div>Connected</div>\n  }\n\n  return (\n    <button onClick={connect}>Connect Metamask</button>\n  )\n}\n\nexport default MetamaskButton;\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EACxB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EAGAD,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;;IACA,IAAID,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,QAA3B,EAAqC;MACnCP,YAAY,CAAC,IAAD,CAAZ;IACD;;IACDQ,OAAO,CAACC,GAAR,CAAa,WAAUd,OAAQ,KAAIM,QAAQ,CAACS,UAAT,CAAoBf,OAApB,EAA6B,QAA7B,CAAuC,EAA1E;IACAa,OAAO,CAACC,GAAR,CAAa,sBAAqBZ,OAAQ,EAA1C;EACD,CAPQ,EAON,CAACF,OAAD,EAAUE,OAAV,CAPM,CAAT;EASAL,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACG,OAAD,EAAUE,OAAV,CAFM,CAAT;;EAIA,MAAMc,qBAAqB,GAAG,MAAOC,UAAP,IAAsD;IAClFhB,UAAU,CAAC,MAAMgB,UAAU,CAACC,UAAX,EAAP,CAAV;IACAf,UAAU,CAACR,MAAM,CAACwB,KAAP,CAAaC,WAAb,CAAyB,MAAMH,UAAU,CAACF,UAAX,EAA/B,CAAD,CAAV;EACD,CAHD;;EAKA,MAAMM,OAAO,GAAGzB,WAAW,CAAC,MAAM;IAChC,MAAMU,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;;IACA,IAAID,MAAM,CAACC,QAAX,EAAqB;MACnBJ,QAAQ,CAACgB,IAAT,CAAc,qBAAd,EAAqC,EAArC,EAAyCC,IAAzC,CAA8C,YAAY;QACxDlB,YAAY,CAAC,IAAD,CAAZ;QACA,MAAMW,qBAAqB,CAACV,QAAQ,CAACkB,SAAT,EAAD,CAA3B;MACD,CAHD;IAID,CALD,MAKO;MACLC,KAAK,CAAC,4BAAD,CAAL;IACD;EACF,CAV0B,EAUxB,EAVwB,CAA3B;;EAYA,IAAIrB,SAAJ,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAQ,OAAO,EAAEiB,OAAjB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;GA3CQtB,c;;KAAAA,c;AA6CT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}